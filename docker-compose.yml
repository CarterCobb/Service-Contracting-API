version: "3.9"

services:
  api:
    restart: always
    build: .
    links:
      - mongo
    volumes:
      - ${HOST_PATH}://usr/src/app:ro
      - /usr/src/app/node_modules/
    deploy:
      replicas: 2
    depends_on:
      - rabbitmq
      - mongo
      - redis
    ports:
      - "1000-1001:1000"
    networks:
      - lawn-care-api-network
  rabbit_consumer:
    container_name: rabbit_consumer
    restart: always
    build: ./rabbitmq-consumer/
    volumes:
      - ${HOST_PATH}/rabbitmq-consumer://usr/src/app:ro
    depends_on:
      - rabbitmq
    ports:
      - 1002:1002
    networks:
      - lawn-care-api-network
  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ${HOST_PATH}/data://data/db
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks:
      - lawn-care-api-network
  nginx:
    image: nginx:latest
    container_name: nginx-load-balancer
    volumes:
      - ${HOST_PATH}/nginx-conf:/etc/nginx/conf.d
    depends_on:
      - api
    ports:
      - 9090:9090
    networks:
      - lawn-care-api-network
  rabbitmq:
    build:
      context: ./rabbitmq
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - ${HOST_PATH}/rabbitmq/data:/var/lib/rabbitmq/mnesia
    ports:
      - 5672:5672
      - 9091:15672
    networks:
      - lawn-care-api-network
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - 6379:6379
    expose:
      - 6379
    restart: always
    volumes:
      - ${HOST_PATH}/redis/data:/data
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - lawn-care-api-network
networks:
  lawn-care-api-network:
    name: lawn-care-api-network
    external: false
